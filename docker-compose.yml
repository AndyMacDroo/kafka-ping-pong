version: '2.1'
services:
  integration-tests:
    build: "integration-tests"
    command: behave
    environment:
      - API_HOST=api
      - API_PORT=8080
    depends_on:
      - api
  api:
    build: "services/api"
    environment:
      - AMQP_URI=amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@rabbit/
      - FLASK_APP=src/api.py
      - FLASK_DEBUG=0
    ports:
      - 8080:8080
    command: flask run --host=0.0.0.0 --port 8080
    depends_on:
      - ping
      - pong
  pong:
    build: "services/pong"
    ports:
      - "8001:8000"
    environment:
      KAFKA_BROKER_HOSTS: "kafka:9092"
      MESSAGE_LIMIT: 20
      KAFKA_READ_TOPIC: "pong"
      KAFKA_WRITE_TOPIC: "ping"
    depends_on:
      kafka:
        condition: service_healthy
  ping:
    build: "services/ping"
    ports:
      - "8000:8000"
    environment:
      KAFKA_BROKER_HOSTS: "kafka:9092"
      MESSAGE_LIMIT: 20
      KAFKA_READ_TOPIC: "ping"
      KAFKA_WRITE_TOPIC: "pong"
    depends_on:
      kafka:
        condition: service_healthy
  rabbit:
    image: rabbitmq:3-management
    restart: always
    ports:
      - "15672:15672"
      - "5672:5672"
    environment:
      RABBITMQ_DEFAULT_VHOST: /
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
  prom:
    image: prom/prometheus:v2.1.0
    volumes:
      - ./bin/config/prometheus.yml:/etc/prometheus/prometheus.yml
    command: '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - '9090:9090'
    depends_on:
        - ping
        - pong
  zookeeper:
    image: zookeeper
    ports:
      - 2181:2181
  kafka:
    image: wurstmeister/kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_CREATE_TOPICS: "ping:1:1,pong:1:1"
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    healthcheck:
      test: nc -z localhost 9092
      interval: 30s
      timeout: 10s
      retries: 5